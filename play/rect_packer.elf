InitWindow("packer", 320, 180, 4)

freespaces={}
freespaces:add { x=0,y=0,w=320,h=180 }

dummyrects := {{x=0,y=0,w=320,h=180}}
splitrect:=function(p,r)?{
	dummyrects:add { x=p.x        ,y=p.y,w=r.x-p.x    ,h=p.h}
	dummyrects:add { x=p.x+r.x+r.w,y=p.y,w=p.w-r.x-r.w,h=p.h}
	dummyrects:add { x=p.x, y=r.y+r.h, w=p.w, h=p.h-r.y-p.y }
	dummyrects:add { x=p.x, y=p.y, w=p.w, h=r.y             }
	p.w=0
	p.h=0
}

packrect:=function(r){

	bestspace:=nil
	for freespace=freespaces[...]?{
		if freespace.w>=r.w && freespace.h>=r.h?{
			bestspace=freespace
			break
		}
	}
	if bestspace ? {
		for freespace=freespaces[...]?{
			if freespace.w>=r.w && freespace.h>=r.h?{
				bestwastedspacex := bestspace.w-r.w
				bestwastedspacey := bestspace.h-r.h

				wastedspacex := freespace.w-r.w
				wastedspacey := freespace.h-r.h


				if wastedspacex*wastedspacey<bestwastedspacex*bestwastedspacey ? {
					bestspace=freespace
				}
			}
		}

		r.x=bestspace.x
		r.y=bestspace.y

		removespaceswithin:=fun(r)?{
			for fs=freespaces[...]?{
				if fs.x>=r.x && fs.x+fs.w<=r.x+r.w
				&& fs.y>=r.y && fs.y+fs.h<=r.y+r.h ? {
					fs.w=0
					fs.h=0
				}
			}
		}
		addfreespace:=fun(r)?{
			if r.w<=0 ? -->
			if r.h<=0 ? -->
			for fs=freespaces[...]?{
				if r.x>=fs.x && r.x+r.w<=fs.x+fs.w
				&& r.y>=fs.y && r.y+r.h<=fs.y+fs.h ? {
					-->
				}
			}
			removespaceswithin(r)
			freespaces:add(r)
		}

		// look for all free spaces that overlap this rect
		for fs=freespaces[...]?{
			if r.x+r.w>fs.x && fs.x+fs.w>r.x
			&& r.y+r.h>fs.y && fs.y+fs.h>r.y ? {

				fsw:=fs.w
				fsh:=fs.h
				fsx:=fs.x
				fsy:=fs.y

				fs.w=0
				fs.h=0

				addfreespace { x=fsx    ,y=fsy,w=r.x-fsx,h=fsh}
				addfreespace { x=fsx+r.w,y=fsy,w=fsw-r.w,h=fsh}
				addfreespace { x=fsx,y=fsy    ,w=fsw,h=r.y-fsy}
				addfreespace { x=fsx,y=fsy+r.h,w=fsw,h=fsh-r.h}
			}
		}
	}
}

nextrecttopack := 0
rects := {}

while PollWindow() ? {
	// Clear(0, 255 * 0.4, 255 * 0.8)
	Clear(32, 32, 32)
	mx := GetMouseX() * 320
	my := GetMouseY() * 180
	for fr=freespaces[...] ? {
		if fr.w==0 || fr.h==0 ? continue
		SetColor(255,0,0,16)
		DrawRectangle(fr.x,fr.y,fr.w,fr.h)
	}
	if Button(' ')&4 ? {
		r := {
			x=64+elf.random()*(320-64*2)
			y=64+elf.random()*(180-64*2)
			w=8+elf.random()*16
			h=8+elf.random()*16
			r=128+elf.random()*127
			g=128+elf.random()*127
			b=128+elf.random()*127
		}
		rects:add(r)
		packrect(r)
	}
	for r = rects[...] ? {
		SetColor(r.r,r.g,r.b)
		DrawRectangle(r.x,r.y,r.w,r.h)
	}

	// SetColor(255, 0, 0)
	// if MouseButton(0) & 4 ? {
	// 	splitrect(dummyrects:idx(0), {x=mx,y=my,w=32,h=32})
	// }
	// for r = dummyrects[...] ? {
	// 	DrawRectangle(r.x,r.y,r.w,r.h)
	// }
}
