// NOTE: please note that the assets used
// for the demo and the idea came from
// https://dafluffypotato.itch.io


PI		::= 3.14159
TAU 	::= 6.28318
PI90 	::= PI * 0.50
PI45 	::= PI * 0.25
PI180 ::= PI * 1.0
PI360 ::= PI * 2.0

view := new elf.gfx.Window("Grass",320,320,2)

grass_files := elf.list_folder("data\\grass")
grass_images := {}
for file = grass_files[...] ? {
	image := elf.gfx.load_image(file.path)
	elf.gfx.image_replace_colors(image,0,0,0,255,0,0,0,0)
	grass_images:add(image)
}

particle_files := elf.list_folder("data\\particles")
grass_particle_images := {}
for file = particle_files[...] ? {
	image := elf.gfx.load_image(file.path)
	elf.gfx.image_replace_colors(image,0,0,0,255,0,0,0,0)
	grass_particle_images:add(image)
}

grass_particles = {}
blades := {}
grass_patches := {}

spawn_grass_particle := fun(x,y) ? {
	grass_particles:add({x=x,y=y,frame=random()*2,timer=0,random=random()})
}

// image := grass_images:idx(random() * 9999)
// blades:add({image=image,angle=0,x=view.res_x*0.5,y=view.res_y*0.5,random=random()})

PATCH_SIZE = 16
add_grass_patch := fun(x_,y_) ? {
	quan := 4 + random() * 12
	for i = 0...quan ? {
		image := grass_images:idx(random() * 9999)
		x := x_ + random()*PATCH_SIZE
		y := y_ + random()*PATCH_SIZE
		angle := (15+random()*30) / 180.0 * PI
		blades:add({image=image,angle=angle,x=x,y=y,random=random()})
	}
}
if (1) ? {
	for y = 0...16 ? {
		for x = 0...16 ? {
			add_grass_patch(x*PATCH_SIZE,y*PATCH_SIZE)
		}
	}
}

sort := fun(array) ? {
	sorted := false
	while sorted == false ? {
		sorted = true
		for i = 0...array:tally()-1 ? {
			a := array:idx(i+0)
			b := array:idx(i+1)
			if a.y > b.y ? {
				array:xset(a,1)
				array:xset(b,0)
				sorted = false
			}
		}
	}
}

blades = merge_sort(blades,fun(a,b) ? {
	--> a.y > b.y
})

// sort(blades)
total_time := 0

while view:poll() ? {
	time := view.time
	total_time += time

	// sort(blades)
	view:set_color(27, 66, 52, 255)
	view:draw_rect(0,0,view.res_x,view.res_y)

	view:set_color(0,0,0,64)
	for blade = blades[...] ? {
		view:draw_rect(blade.x,blade.y,8,8)
	}

	force := {x=view.mouse_x,y=view.mouse_y,radSq=32*32}
	force_x := force.x
	force_y := force.y
	force_radSq := force.radSq
	render_commands := {}

	view:set_color(255,255,255,255)
	for blade = blades[...] ? {
		blade_x := blade.x
		blade_y := blade.y
		phase := total_time * 0.5 + blade_x * 0.002 + blade.random*0.4
		angle := blade.angle
		angle += sin(phase * PI) * 0.01
		if 1 ? {
			dif_x = blade_x - force_x
			dif_y = blade_y - force_y
			lenSq := dif_x*dif_x + dif_y*dif_y
			if lenSq <= force_radSq ? {
				len := sqrt(lenSq)
				dir_x := dif_x / len
				dir_y := dif_y / len
				if random() * 1000 < 5 ? {
					spawn_grass_particle(blade_x,blade_y)
				}
				// view:draw_line(blade.x,blade.y,blade.x+dir_x*30,blade.y+dir_y*30)
				// elf.pf("x,y: ", dir_x, ", ", dir_y)
				// dir := 1
				// if dif_x < 0 ? {
				// 	dir = -1
				// }
				strength := 1.0 - lenSq / force_radSq
				// angle += strength * dir * 0.4
				target_angle := atan2(dir_y,dir_x)  + PI*0.5
				angle += (target_angle - angle) * strength * 0.8
				// angle += atan2(dir_y,dir_x) * strength * 0.4 // * dir * 0.4
			}
			angle -= angle * 0.01
			// if angle < -PI90 ? {
			// 	angle = -PI90
			// } else if angle > PI90 ? {
			// 	angle = PI90
			// }
		}
		image := blade.image

		render_commands:add({
			type="image",
			src_image=image,
			rotation=angle,
			x=blade_x,
			y=blade_y,
			center_x=image.width*0.5
			center_y=image.height*0.5
		})
		blade.angle = angle
	}


	// render_commands:add({
	// 	src_image=player_image,
	// 	rotation=0,
	// 	x=player.x,
	// 	y=player.y,
	// 	src_rect={x=0,y=0,w=48,h=64},
	// 	w=48*2,
	// 	h=64*2,
	// 	center_x=0,
	// 	center_y=0,
	// })

	// view:set_rotation(0)
	// view:set_src_image(player_image)
	// view:set_src_rect(0,0,48,64)
	// view:draw_image(player.x,player.y,48*2,64*2)

	// sort(render_commands)

	for cmd = render_commands[...] ? {
		view:set_center(cmd.center_x,cmd.center_y)
		view:set_rotation(cmd.rotation)
		view:set_src_image(cmd.src_image)
		if cmd.src_rect ? {
			r := cmd.src_rect
			view:set_src_rect(r.x,r.y,r.w,r.h)
		}
		if cmd.w ? {
			view:draw_image(cmd.x,cmd.y,cmd.w,cmd.h)
		} else {
			view:draw_image(cmd.x,cmd.y)
		}
	}

	new_particles := {}
	for par = grass_particles[...] ? {
		keep := true
		par.timer += 1
		if par.timer >= 10 ? {
			par.timer = 0
			par.frame += 1
			if par.frame >= grass_particle_images:tally() ? {
				keep = false
			}
		}
		if keep ? {
			new_particles:add(par)
			view:set_src_image(grass_particle_images:idx(par.frame))
			view:draw_image(par.x,par.y)
			par.x += sin(par.random * total_time * PI) * par.random + sin(par.random * total_time * PI * 0.1) * 1.1
			par.y -= 0.5;
		}
	}
	grass_particles = new_particles

	view:draw_circle(force.x,force.y,sqrt(force.radSq))
	view:draw_text(""+(1.0 / view.time), 0,0, 255, 255, 255, 255)
}


