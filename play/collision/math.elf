PI      = 3.14159
TAU     = 6.28318
E       = 2.71828
k_isqrt = 0.70710678118 // 1.0 / sqrt(2.0)

signz=fun(x) ? {
	if x < 0 ? 	--> -1
	if x > 0 ? 	--> +1
	else        -->  0
}
abs=fun(x) ? {
	if x < 0 ? --> -x else --> x
}
max=fun(a,b) ? {
	if a > b ? --> a else --> b
}
min=fun(a,b) ? {
	if a < b ? --> a else --> b
}
appr=fun(src,dst,acc) ? {
	if src > dst ? --> max(src-acc,dst)
	else 			   --> min(src+acc,dst)
}
vec2_={
	__new=fun(x,y)?{
		this.x=iton(x ?? 0)
		this.y=iton(y ?? x ?? 0)
	}
	clone=fun()?(vec2(this.x,this.y))
	signz=fun()?(vec2(signz(this.x),signz(this.y)))
	lenSq=fun()?(this.x*this.x+this.y*this.y)
	len=fun()?(sqrt(this.x*this.x+this.y*this.y))
	norm=fun()?(this/this:len())
	__add=fun(that)?(vec2(this.x+that.x,this.y+that.y))
	__sub=fun(that)?(vec2(this.x-that.x,this.y-that.y))
	__sub1=fun(that)?(vec2(this.x-that,this.y-that))
	__mul=fun(that)?(vec2(this.x*that.x,this.y*that.y))
	__div=fun(that)?(vec2(this.x/that.x,this.y/that.y))
	__mul1=fun(that)?(vec2(this.x*that,this.y*that))
	__div1=fun(that)?(vec2(this.x/that,this.y/that))
}
vec2 = fun(x,y) ? new vec2_(x,y)

Camera={
	__new=fun(offset,scale)?{
		offset ?= vec2()
		scale ?= vec2(1,1)
		this.offset=vec2(iton(offset.x),iton(offset.y))
		this.scale=vec2(iton(scale.x),iton(scale.y))
	}
	clone=fun()?(new Camera(this.offset,this.scale))
	unproject=fun(point)?{
		--> vec2(point.x,point.y)/this.scale-this.offset
	}
	project=fun(point)?{
		--> vec2(point.x,point.y)*this.scale+this.offset
	}
	zoom_point=fun(point,zoom)?{
		zoom ?= 1
		new_scale := this.scale+this.scale:signz()*vec2(zoom)
		if new_scale.x==0||new_scale.y==0? --> ;
		point ::= vec2(point.x,point.y)
		a ::= this.scale / new_scale
		this.offset = point - (point - this.offset) / a
		this.scale = new_scale
	}
}

rgb=fun(r,g,b) ? ({r=r,g=g,b=b,a=255})
WHITE = rgb(255,255,255,255)
BLUE  = rgb(32,32,200,255)
GREEN = rgb(0,128,32,255)
RED   = rgb(255,32,0,255)
