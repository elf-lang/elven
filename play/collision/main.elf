// #test "hard binding error"
// warnings := #getwarnings()
// #assert warnings[0] == 0


PRESSED  = elf.gfx.Window.PRESSED
DOWN 		= elf.gfx.Window.DOWN
RELEASED = elf.gfx.Window.RELEASED

UPSCALE  	::= 4
WIND_W   	::= 128 // 320
WIND_H   	::= 128 // 240
total_time	= 0
EDITOR_MODE	= false
elf.audio.init()
VIEW = new elf.gfx.Window("Collision!",WIND_W,WIND_H,UPSCALE)
load "math.elf"
load "game.elf"
load "editor.elf"
load "assets.elf"


//
// prepare assets for the editor and the game
//

init_assets()
init_game(assets)
init_editor(assets)
view::=VIEW

while view:poll() ? {
	time ::= view.time
	if view.keys['1']&RELEASED?{
		EDITOR_MODE^=1
	}
	if EDITOR_MODE?{
	}else{
		tick_game(time)
	}
	draw_game()
	if EDITOR_MODE?{
		draw_editor(time)
	}
	total_time += time
}


#eof

for plat = platforms[...] ? {
	move := vec2()
	if plat == platforms:idx(0) ? {
		move.y = sin(total_time*PI*0.5)*2
	} else {
		move.x = sin(total_time*PI*0.5)*2
	}
	plat.x+=move.x
	plat.y+=move.y
	for that = sprites[...] ? {
		iff plat:overlaps(that) ? {
			continue
		}
		plat.colliding = true
		that.colliding = true
		if plat.y < that.y ? {
			if that.v.y < 0 ? {
				that.y = plat.y + plat.h;
				that.v.y = 0
				that.v.x = 0
				that.m.x += move.x
					// that.x += move.x
				jump_buffer=1
			}
		}
	}
}
